const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/contact-api.service-DMJhnzwS.js","assets/cache.service-D8Mcd249.js","assets/index-e3V0CD7Y.js","assets/index-CVSl0yP1.css","assets/validation.service-DurMElEb.js","assets/dealService-updated-Ch6iu4u1.js"])))=>i.map(i=>d[i]);
import{cQ as l,du as d}from"./index-e3V0CD7Y.js";class y{constructor(){this.apiKey="",this.baseUrl="https://api.openai.com/v1",this.jobs=new Map,this.initializeFromConfig()}async initializeFromConfig(){try{const s=await(await fetch("/api/openai/status")).json();s.configured&&s.apiKey&&(this.apiKey=s.apiKey)}catch(t){l.error("Failed to initialize Batch API service",t)}}async enrichContactsBulk(t,s=["scoring","social","personality"],e={}){const o=await this.getContactsById(t),i=[];o.forEach((h,p)=>{s.forEach(u=>{const g=this.buildEnrichmentPrompt(h,u);i.push({custom_id:`enrich_${h.id}_${u}_${p}`,method:"POST",url:"/v1/chat/completions",body:{model:"gpt-4o-mini",messages:[{role:"system",content:"You are a professional contact enrichment AI that provides detailed analysis and insights."},{role:"user",content:g}],max_tokens:1e3}})})});const a=e.processingMode||"overnight",n=`batch_enrich_${a}_${Date.now()}`,c=.003,m=t.length*(a==="overnight"?c*.5:c),r={id:n,type:"contact_enrichment",status:a==="immediate"?"processing":"queued",itemCount:t.length,estimatedCost:m,processingMode:a,createdAt:new Date().toISOString(),metadata:{contactIds:t,analysisTypes:s,processingMode:a}};return this.jobs.set(r.id,r),a==="immediate"?setTimeout(async()=>{setTimeout(async()=>{r.status="completed",r.completedAt=new Date().toISOString(),this.jobs.set(r.id,r),l.info(`Immediate batch contact enrichment completed: ${t.length} contacts`)},3e3)},500):setTimeout(async()=>{r.status="processing",this.jobs.set(r.id,r),setTimeout(async()=>{r.status="completed",r.completedAt=new Date().toISOString(),this.jobs.set(r.id,r),l.info(`Overnight batch contact enrichment queued and simulated completion: ${t.length} contacts`)},8e3)},1e3),l.info(`Batch contact enrichment submitted: ${t.length} contacts, mode: ${a}, estimated cost: $${m}`),r}async generateCampaignEmailsBulk(t,s){const e=await this.getContactsById(t),o=[];e.forEach((n,c)=>{const m=this.buildEmailGenerationPrompt(n,s);o.push({custom_id:`email_${n.id}_${c}`,method:"POST",url:"/v1/chat/completions",body:{model:"gpt-4o-mini",messages:[{role:"system",content:"You are an expert email marketing copywriter who creates personalized, engaging emails that drive conversions."},{role:"user",content:m}],max_tokens:800}})});const i=this.calculateBatchCost(o.length),a={id:`batch_email_${Date.now()}`,type:"email_generation",status:"queued",itemCount:t.length,estimatedCost:i,createdAt:new Date().toISOString()};return this.jobs.set(a.id,a),await this.submitBatchJob(a.id,o),a}async analyzePipelineBulk(t){const s=await this.getDealsById(t),e=[];s.forEach((a,n)=>{const c=this.buildDealAnalysisPrompt(a);e.push({custom_id:`deal_${a.id}_${n}`,method:"POST",url:"/v1/chat/completions",body:{model:"gpt-4o",messages:[{role:"system",content:"You are a sales analytics expert who provides deep insights into deal progression, risk factors, and optimization opportunities."},{role:"user",content:c}],max_tokens:1200}})});const o=this.calculateBatchCost(e.length),i={id:`batch_pipeline_${Date.now()}`,type:"pipeline_analysis",status:"queued",itemCount:t.length,estimatedCost:o,createdAt:new Date().toISOString()};return this.jobs.set(i.id,i),await this.submitBatchJob(i.id,e),i}async researchSocialProfilesBulk(t){const s=await this.getContactsById(t),e=[];s.forEach((a,n)=>{const c=this.buildSocialResearchPrompt(a);e.push({custom_id:`social_${a.id}_${n}`,method:"POST",url:"/v1/chat/completions",body:{model:"gpt-4o-mini",messages:[{role:"system",content:"You are a social media research specialist who analyzes professional profiles to provide actionable insights for sales and networking."},{role:"user",content:c}],max_tokens:1e3}})});const o=this.calculateBatchCost(e.length),i={id:`batch_social_${Date.now()}`,type:"social_research",status:"queued",itemCount:t.length,estimatedCost:o,createdAt:new Date().toISOString()};return this.jobs.set(i.id,i),await this.submitBatchJob(i.id,e),i}async submitBatchJob(t,s){try{const e=s.map(p=>JSON.stringify(p)).join(`
`),o=new FormData,i=new Blob([e],{type:"application/json"});o.append("file",i,`${t}.jsonl`),o.append("purpose","batch");const a=await fetch(`${this.baseUrl}/files`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`},body:o});if(!a.ok){const p=await a.text();throw new Error(`File upload failed: ${a.status} ${p}`)}const n=await a.json(),c=this.jobs.get(t),m=c?.processingMode==="immediate"?"60m":"24h",r=await fetch(`${this.baseUrl}/batches`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({input_file_id:n.id,endpoint:"/v1/chat/completions",completion_window:m,metadata:{job_id:t,created_by:"smartcrm"}})});if(!r.ok){const p=await r.text();throw new Error(`Batch creation failed: ${r.status} ${p}`)}const h=await r.json();c&&c.status!=="processing"&&(c.status="queued",this.jobs.set(t,c)),this.monitorBatchJob(t,h.id)}catch(e){l.error(`Failed to submit batch job ${t}`,e);const o=this.jobs.get(t);o&&(o.status="failed",this.jobs.set(t,o))}}async monitorBatchJob(t,s){const e=async()=>{try{const i=await fetch(`${this.baseUrl}/batches/${s}`,{headers:{Authorization:`Bearer ${this.apiKey}`}});if(!i.ok)throw new Error(`Failed to get batch status for ${s}: ${i.status}`);const a=await i.json(),n=this.jobs.get(t);if(!n)return;if(a.status==="completed"){const c=await fetch(`${this.baseUrl}/files/${a.output_file_id}/content`,{headers:{Authorization:`Bearer ${this.apiKey}`}});if(!c.ok)throw new Error(`Failed to download batch results for ${s}: ${c.status}`);const r=(await c.text()).split(`
`).filter(h=>h.trim()).map(h=>JSON.parse(h));n.status="completed",n.completedAt=new Date().toISOString(),n.results=r,this.jobs.set(t,n),await this.processBatchResults(n,r)}else a.status==="failed"?(n.status="failed",this.jobs.set(t,n)):setTimeout(e,3e4)}catch(i){l.error(`Error monitoring batch job ${t} (batch ${s})`,i)}};this.jobs.get(t)?.processingMode==="immediate"?setTimeout(e,6e4):setTimeout(e,3e4)}async processBatchResults(t,s){try{switch(t.type){case"contact_enrichment":await this.updateContactsWithEnrichment(s);break;case"email_generation":await this.saveBulkEmailResults(s);break;case"pipeline_analysis":await this.updateDealsWithAnalysis(s);break;case"social_research":await this.updateContactsWithSocialInsights(s);break}l.info(`Batch job ${t.id} completed successfully, processed ${s.length} items`)}catch(e){l.error(`Failed to process batch results for job ${t.id}`,e),t.status="failed",this.jobs.set(t.id,t)}}calculateBatchCost(t){return t*.0015}buildEnrichmentPrompt(t,s){const e=`Contact: ${t.name} (${t.email}) at ${t.company||"Unknown Company"}`;switch(s){case"scoring":return`${e}

Analyze this contact for lead scoring. Consider: company size, role seniority, engagement potential, budget authority. Provide a score 1-100 and detailed reasoning.`;case"social":return`${e}

Research likely social media presence and professional background. Provide insights for personalized outreach.`;case"personality":return`${e}

Analyze communication style preferences, decision-making approach, and optimal engagement strategies based on available information.`;default:return`${e}

Provide comprehensive contact analysis and enrichment insights.`}}buildEmailGenerationPrompt(t,s){return`Create a personalized email for:
Contact: ${t.name} (${t.title||"Professional"}) at ${t.company||"their company"}

Campaign Details:
- Subject Theme: ${s.subject}
- Tone: ${s.tone}
- Purpose: ${s.purpose}
- Call to Action: ${s.callToAction}

Generate a complete email with personalized subject line and body that resonates with this specific contact.`}buildDealAnalysisPrompt(t){return`Analyze this sales deal:
Deal: ${t.title} - $${t.value}
Stage: ${t.stage}
Contact: ${t.contact?.name}
Company: ${t.contact?.company}
Days in Stage: ${t.daysInStage||"Unknown"}

Provide: risk assessment, next best actions, probability of close, timeline predictions, and optimization recommendations.`}buildSocialResearchPrompt(t){return`Research social and professional insights for:
${t.name} - ${t.title||"Professional"} at ${t.company||"Unknown Company"}
Email: ${t.email}

Provide: likely social media platforms, professional interests, content engagement patterns, optimal outreach timing, and personalization opportunities.`}async getContactsById(t){const{contactAPIService:s}=await d(async()=>{const{contactAPIService:o}=await import("./contact-api.service-DMJhnzwS.js");return{contactAPIService:o}},__vite__mapDeps([0,1,2,3,4])),e=[];for(const o of t)try{const i=await s.getContact(o);e.push(i)}catch(i){l.warn(`Could not fetch contact ${o}`,{error:i})}return e}async getDealsById(t){const{dealService:s}=await d(async()=>{const{dealService:e}=await import("./dealService-updated-Ch6iu4u1.js");return{dealService:e}},__vite__mapDeps([5,1,2,3,4]));return await s.getDealsById(t)}async updateContactsWithEnrichment(t){const{contactAPIService:s}=await d(async()=>{const{contactAPIService:e}=await import("./contact-api.service-DMJhnzwS.js");return{contactAPIService:e}},__vite__mapDeps([0,1,2,3,4]));for(const e of t)if(e.response?.choices?.[0]?.message?.content){const o=e.custom_id,i=o.split("_");if(i.length<4){l.warn(`Skipping malformed custom_id: ${o}`);continue}const a=i[1],n=i[2];try{const c=JSON.parse(e.response.choices[0].message.content);await s.updateContact(a,{[`ai_${n}_analysis`]:c})}catch(c){l.error(`Failed to parse or update contact ${a} with enrichment data (customId: ${o})`,{error:c})}}}async saveBulkEmailResults(t){for(const s of t)if(s.response?.choices?.[0]?.message?.content){const e=s.custom_id,o=e.split("_");if(o.length<3){l.warn(`Skipping malformed custom_id: ${e}`);continue}const i=o[1],a=s.response.choices[0].message.content;await this.saveGeneratedEmail(i,a)}}async updateDealsWithAnalysis(t){const{dealService:s}=await d(async()=>{const{dealService:e}=await import("./dealService-updated-Ch6iu4u1.js");return{dealService:e}},__vite__mapDeps([5,1,2,3,4]));for(const e of t)if(e.response?.choices?.[0]?.message?.content){const o=e.custom_id,i=o.split("_");if(i.length<3){l.warn(`Skipping malformed custom_id: ${o}`);continue}const a=i[1];try{const n=JSON.parse(e.response.choices[0].message.content);await s.updateDeal(a,{})}catch(n){l.error(`Failed to parse or update deal ${a} with analysis data (customId: ${o})`,{error:n})}}}async updateContactsWithSocialInsights(t){const{contactAPIService:s}=await d(async()=>{const{contactAPIService:e}=await import("./contact-api.service-DMJhnzwS.js");return{contactAPIService:e}},__vite__mapDeps([0,1,2,3,4]));for(const e of t)if(e.response?.choices?.[0]?.message?.content){const o=e.custom_id,i=o.split("_");if(i.length<3){l.warn(`Skipping malformed custom_id: ${o}`);continue}const a=i[1];try{const n=JSON.parse(e.response.choices[0].message.content);await s.updateContact(a,{})}catch(n){l.error(`Failed to parse or update contact ${a} with social insights (customId: ${o})`,{error:n})}}}async saveGeneratedEmail(t,s){l.info(`Generated email for contact ${t} saved.`)}getBatchJob(t){return this.jobs.get(t)}getAllBatchJobs(){return Array.from(this.jobs.values())}getBatchJobsByType(t){return Array.from(this.jobs.values()).filter(s=>s.type===t)}}const w=new y;export{w as batchAPIService};
