export interface Email {
  id: string;
  threadId?: string;
  subject: string;
  content: string;
  htmlContent?: string;
  fromAddress: string;
  fromName?: string;
  toAddresses: string[];
  ccAddresses?: string[];
  bccAddresses?: string[];
  replyToAddress?: string;
  status: 'draft' | 'sent' | 'delivered' | 'read' | 'replied' | 'failed';
  priority: 'low' | 'normal' | 'high' | 'urgent';
  tags: string[];
  attachments: EmailAttachment[];
  contactId?: string;
  dealId?: string;
  taskId?: string;
  templateId?: string;
  scheduledAt?: Date;
  sentAt?: Date;
  deliveredAt?: Date;
  readAt?: Date;
  createdAt: Date;
  updatedAt: Date;
  createdBy: string;
  isAutoGenerated?: boolean;
  aiSuggestions?: AISuggestion[];
  trackingEnabled: boolean;
  trackingPixelId?: string;
  linkTracking: LinkTracking[];
}

export interface EmailAttachment {
  id: string;
  fileName: string;
  fileSize: number;
  mimeType: string;
  url: string;
  isInline?: boolean;
  contentId?: string;
}

export interface EmailTemplate {
  id: string;
  name: string;
  subject: string;
  content: string;
  htmlContent?: string;
  category: 'follow-up' | 'proposal' | 'welcome' | 'newsletter' | 'meeting' | 'sales' | 'support' | 'other';
  variables: TemplateVariable[];
  isActive: boolean;
  usageCount: number;
  createdAt: Date;
  updatedAt: Date;
  createdBy: string;
}

export interface TemplateVariable {
  name: string;
  description: string;
  defaultValue?: string;
  required: boolean;
  type: 'text' | 'number' | 'date' | 'boolean';
}

export interface AISuggestion {
  id: string;
  type: 'subject' | 'content' | 'timing' | 'recipient' | 'template';
  suggestion: string;
  confidence: number;
  reasoning: string;
  applied: boolean;
}

export interface LinkTracking {
  id: string;
  originalUrl: string;
  trackingUrl: string;
  clickCount: number;
  lastClickedAt?: Date;
  uniqueClicks: number;
}

export interface EmailSequence {
  id: string;
  name: string;
  description?: string;
  steps: SequenceStep[];
  isActive: boolean;
  contactCount: number;
  completionRate: number;
  createdAt: Date;
  updatedAt: Date;
  createdBy: string;
}

export interface SequenceStep {
  id: string;
  order: number;
  templateId: string;
  delayDays: number;
  delayHours?: number;
  condition?: SequenceCondition;
  isActive: boolean;
}

export interface SequenceCondition {
  type: 'email_opened' | 'email_clicked' | 'email_replied' | 'deal_stage' | 'contact_field';
  operator: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than';
  value: string;
}

export interface CommunicationLog {
  id: string;
  type: 'email' | 'call' | 'meeting' | 'text' | 'video_call' | 'note';
  direction: 'inbound' | 'outbound';
  contactId: string;
  dealId?: string;
  taskId?: string;
  subject?: string;
  content: string;
  duration?: number; // minutes for calls/meetings
  status: 'completed' | 'missed' | 'cancelled' | 'scheduled';
  outcome?: string;
  nextSteps?: string;
  tags: string[];
  attachments: string[];
  timestamp: Date;
  createdBy: string;
  metadata?: Record<string, any>;
}

export interface CallLog {
  id: string;
  contactId: string;
  dealId?: string;
  direction: 'inbound' | 'outbound';
  phoneNumber: string;
  duration: number; // seconds
  status: 'completed' | 'missed' | 'busy' | 'no_answer' | 'failed';
  recording?: {
    url: string;
    transcription?: string;
    duration: number;
  };
  notes: string;
  outcome: 'interested' | 'not_interested' | 'callback' | 'meeting_scheduled' | 'no_contact' | 'other';
  nextSteps?: string;
  tags: string[];
  timestamp: Date;
  createdBy: string;
}

export interface EmailAnalytics {
  totalSent: number;
  totalDelivered: number;
  totalOpened: number;
  totalClicked: number;
  totalReplied: number;
  deliveryRate: number;
  openRate: number;
  clickRate: number;
  replyRate: number;
  unsubscribeRate: number;
  bounceRate: number;
  spamRate: number;
  engagementScore: number;
  bestSendTimes: { day: string; hour: number; rate: number }[];
  topPerformingSubjects: { subject: string; openRate: number; clickRate: number }[];
  templatePerformance: { templateId: string; name: string; stats: EmailStats }[];
}

export interface EmailStats {
  sent: number;
  delivered: number;
  opened: number;
  clicked: number;
  replied: number;
  unsubscribed: number;
  bounced: number;
  marked_spam: number;
}

export interface EmailFilter {
  status: Email['status'] | 'all';
  priority: Email['priority'] | 'all';
  dateRange: { start: Date; end: Date } | null;
  contactId: string | null;
  dealId: string | null;
  tags: string[];
  hasAttachments: boolean | null;
  isTracked: boolean | null;
  searchQuery: string;
}
